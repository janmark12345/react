//This is a cool stopwatch that I will use for myself everyday. It's awesome! At least for me.

var { Button, ButtonToolbar, Modal, Form, 
      FormControl, FormGroup, ControlLabel } = ReactBootstrap;

var isWorking = true;

if(!localStorage.stopwatch) {
  localStorage.setItem('seconds', "00");
  localStorage.setItem('minutes', "00");
  localStorage.setItem('hours', "00");
  localStorage.setItem('stopwatch', "00:00:00");
  document.title = localStorage.stopwatch;
} else {
  document.title = localStorage.stopwatch;
}

var StopwatchBox = new React.createClass({

  getInitialState() {
    return {
      seconds: localStorage.seconds,
      minutes: localStorage.minutes,
      hours: localStorage.hours,
      showModal: false
    }
  },
  
  componentWillMount() {
    
    let seconds = this.state.seconds;
    let minutes = this.state.minutes;
    let hours = this.state.hours;
    
    this.setState({
      stopwatchTime: hours + ":" + minutes + ":" + seconds
    });
  },
  
  closeModal() {
    this.setState({ showModal: false });
  },

  openModal() {
    window.clearInterval(this.state.stopwatchInterval);
      this.setState({
        isStopwatchOn: false,
        showModal: true
      });
    //this.setState({ showModal: true });
  },
   
  startButton() {
    
    function startTimer() {
      let seconds = parseInt(this.state.seconds);
      let minutes = parseInt(this.state.minutes);
      let hours = parseInt(this.state.hours);
      
      let clock = document.querySelector('h2');
      if(isWorking) {
        clock.classList.add('change-color');
        isWorking = !isWorking;
      } else {
        clock.classList.remove('change-color');
        isWorking = !isWorking;
      }
      
      
      seconds += 1;
      if(seconds > 59) {
        seconds = 0;
        minutes += 1;
      }
      
      if(minutes > 59) {
        seconds = 0;
        minutes = 0;
        hours += 1;
      }
      
      seconds = seconds.toString();
      minutes = minutes.toString();
      hours = hours.toString();
      
      if(parseInt(seconds[0]) < 10 && seconds[1] === undefined) {
        seconds = "0" + seconds;
      }
      if(parseInt(minutes[0]) < 10 && minutes[1] === undefined) {
        minutes = "0" + minutes;
      }
      if(parseInt(hours[0]) < 10 && hours[1] === undefined) {
        hours = "0" + hours;
      }
      localStorage.setItem('seconds', seconds);
      localStorage.setItem('minutes', minutes);
      localStorage.setItem('hours', hours);
      localStorage.setItem('stopwatch', hours + ":" + minutes + ":" + seconds);
      document.title = localStorage.stopwatch;
      
      
      this.setState({
        seconds: seconds,
        minutes: minutes,
        hours: hours,
        stopwatchTime: hours + ":" + minutes + ":" + seconds
      });  
    }
    if(!this.state.isStopwatchOn) {
      var stopwatchInterval = window.setInterval(startTimer.bind(this), 1000);
    
      this.setState({
        isStopwatchOn: true,
        stopwatchInterval: stopwatchInterval
      });
    } else {
      window.clearInterval(this.state.stopwatchInterval);
      this.setState({
        isStopwatchOn: false
      });
    }
  },
   
  resetButton() {
    
    window.clearInterval(this.state.stopwatchInterval);
   
    this.setState({
      seconds: "00",
      minutes: "00",
      hours: "00",
      stopwatchTime: "00:00:00",
      isStopwatchOn: false
    });
    
  },
  
  editTime() {
       
    let seconds = document.getElementById('formSeconds').value;
    let minutes = document.getElementById('formMinutes').value;
    let hours = document.getElementById('formHours').value;
    let regex = /^[0-9]+$/;
    
    if(parseInt(seconds[0]) < 10 && seconds[1] === undefined) {
      seconds = "0" + seconds;
    }
    if(parseInt(minutes[0]) < 10 && minutes[1] === undefined) {
      minutes = "0" + minutes;
      }
    if(parseInt(hours[0]) < 10 && hours[1] === undefined) {
      hours = "0" + hours;
    }
    
    if( ( Number(seconds) || Number(minutes) || Number(hours) ) < 0 ||
        ( Number(seconds) || Number(minutes) ) > 60 ||
        ( seconds || minutes || hours ) === "" ||
        !(regex.test(seconds) && regex.test(minutes) && regex.test(hours))
      ) {
      alert('Sorry. There was an error. Try again.');
    } else {
      console.log(hours + ":" + minutes + ":" + seconds)
      localStorage.setItem('seconds', seconds);
      localStorage.setItem('minutes', minutes);
      localStorage.setItem('hours', hours);
      localStorage.setItem('stopwatch', hours + ":" + minutes + ":" + seconds);
      
      this.setState({
        seconds: seconds,
        minutes: minutes,
        hours: hours,
        stopwatchTime: hours + ":" + minutes + ":" + seconds,
        showModal: false
      });
      
      
      
    }
  },
  
  keyPress(myFunction) {
    key('ctrl+d', function() {
      myFunction();
      console.log(myFunction);
      return false;
    });
  },
  
  render() {
        
    return (
      <div className="middle-screen">
        
        <h2>{this.state.stopwatchTime}</h2>
        
        {this.keyPress(this.openModal)}
        
        <div className="button-group">
          <Button bsStyle="primary" onClick={this.startButton}>Start/Stop</Button>
          <Button bsStyle="danger" onClick={this.resetButton}>Reset</Button>  
          <Button bsStyle="info" onClick={this.openModal}>Edit time</Button> 
        </div>
        
        <Modal show={this.state.showModal} onHide={this.close}>
          <Modal.Header>
            <Modal.Title>Edit Stopwatch Time</Modal.Title>
          </Modal.Header>
          <Modal.Body>
            <div className='form-align'>
            <Form inline>
              <FormGroup controlId="formStopwatch">
                <FormControl id="formHours" type="text" placeholder="Hours" /> {' : '}
                <FormControl id="formMinutes" type="text" placeholder="Minutes" /> {' : '}
                <FormControl id="formSeconds" type="text" placeholder="Seconds" />
              </FormGroup>
              
              
            </Form>
            </div>
          </Modal.Body> 
          <Modal.Footer>
            <Button onClick={this.editTime} bsStyle="primary">Edit Time</Button>
            <Button onClick={this.closeModal}>Close</Button>
          </Modal.Footer>
        </Modal>
        
      </div>
    )
  }
  
  
});

ReactDOM.render(<StopwatchBox />, document.getElementById('chron'));

